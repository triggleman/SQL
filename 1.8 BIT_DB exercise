#1.How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson 

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#2.How many of those orders were for an iPhone?

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February.

SELECT customer.order_id, customer.acctnum, feb.orderID AS FebSales 
FROM BIT_DB.customers customer 
JOIN BIT_DB.FebSales feb 
ON customer.order_id = feb.orderID 
WHERE length(order_id) = 6  
AND order_id <> 'Order ID';


#4. Which product was the cheapest one sold in January, and what was the price?
SELECT price 
FROM BIT_DB.JanSales 
WHERE price = (SELECT MIN(price) 
FROM BIT_DB.JanSales) 
LIMIT 1;


#5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT product, SUM(Quantity ) * price AS total_price F
ROM BIT_DB.JanSales 
GROUP BY product;


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(Quantity),SUM(Quantity) * price AS total_price 
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101';


#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT count(distinct cust.acctnum), avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';
